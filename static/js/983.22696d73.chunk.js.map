{"version":3,"file":"static/js/983.22696d73.chunk.js","mappings":"gNAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yKAIX,qBAAGE,MAAkBC,OAAOC,QAI1B,qBAAGF,MAAkBC,OAAOE,aAI5BC,EAAWN,EAAAA,GAAAA,EAAH,2EAKRO,EAAYP,EAAAA,GAAAA,GAAH,2LASTQ,EAAYR,EAAAA,GAAAA,GAAH,oRAEA,qBAAGE,MAAkBC,OAAOM,UAE5B,qBAAGP,MAAkBC,OAAOO,a,SCHlD,EAzBsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACEA,IACE,SAACJ,EAAD,UACGI,EAAKC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtB,OACE,SAACP,EAAD,WACE,UAACT,EAAD,CAAWiB,GAAE,kBAAaH,GAA1B,WACE,gBAAKI,IAVE,kCAUoBF,EAAaG,IAAKJ,KAC7C,UAACR,EAAD,eAAYQ,SAHAD,U,gFCa5B,UApBiB,WACf,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAEGC,MAAK,SAAAZ,GACJ,OAAOA,EAAKA,KAAKa,WAElBD,KAAKH,KACP,KAGD,iCACE,6CACA,SAAC,IAAD,CAAWT,KAAMA,S,0MCnBVc,EAAU,mCACVC,EAAW,+B,SCETC,EAA2B,GAA3BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0CC,GAA1C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKW,IAAIC,MAAM,cALrB,gFASO,SAASC,IACd,OAAOL,EAA2B,GAAD,OAC5BD,EAD4B,wCACYD,IAIxC,SAASQ,EAAgBC,GAC9B,OAAOP,EAA2B,GAAD,OAC5BD,EAD4B,iCACKD,EADL,iCACqCS,EADrC,yBAK5B,SAASC,EAAgBC,GAC9B,OAAOT,EAA2B,GAAD,OAC5BD,EAD4B,kBACVU,EADU,oBACSX,EADT,oBAK5B,SAASY,EAAgBD,GAC9B,OAAOT,EAA2B,GAAD,OAC5BD,EAD4B,kBACVU,EADU,4BACiBX,EADjB,oBAK5B,SAASa,EAAgBF,GAC9B,OAAOT,EAA2B,GAAD,OAC5BD,EAD4B,kBACVU,EADU,4BACiBX,EADjB","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/HomePage.jsx","constans/movies-api.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 18px;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.accentTwo};\n  }\n`;\n\nexport const LinkText = styled.p`\n  padding: 25px 20px 15px;\n  text-align: center;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-gap: 15px;\n  grid-template-columns: repeat(auto-fill, 300px);\n  margin-bottom: 40px;\n  padding-top: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  overflow: hidden;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  box-shadow: 0px 2px 5px 0px;\n\n  transition: transform 250ms ease;\n\n  &:hover {\n    transform: scale(1.015);\n    box-shadow: 0px 2px 1px 0px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MovieList, MovieItem, MovieLink, LinkText } from './MovieList.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieLinkList = ({ data }) => {\n  return (\n    data && (\n      <MovieList>\n        {data.map(({ id, title, poster_path }) => {\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                <img src={BASE_IMAGE_URL + poster_path} alt={title} />\n                <LinkText> {title}</LinkText>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    )\n  );\n};\n\nMovieLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number, title: PropTypes.string })\n  ),\n};\n\nexport default MovieLinkList;\n","import { useState, useEffect } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport * as api from 'service/api';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    api\n      .getMoviesTrending()\n      .then(data => {\n        return data.data.results;\n      })\n      .then(setData);\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today:</h1>\n      <MovieList data={data} />\n    </>\n  );\n};\n\nexport default HomePage;\n","export const API_KEY = '477970700460ede8f70e8706023875b6';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constans/movies-api';\n\nasync function getMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return new Error('Not found');\n  }\n}\n\nexport function getMoviesTrending() {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function getSearchMovies(query) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["MovieLink","styled","Link","theme","colors","text","accentTwo","LinkText","MovieList","MovieItem","accent","secondary","data","map","id","title","poster_path","to","src","alt","useState","setData","useEffect","api","then","results","API_KEY","BASE_URL","getMoviesWithErrorHandling","url","axios","response","Error","getMoviesTrending","getSearchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}