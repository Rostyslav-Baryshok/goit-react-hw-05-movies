{"version":3,"file":"static/js/328.a2aaa83e.chunk.js","mappings":"0OAEaA,E,QAAWC,GAAAA,GAAH,seASG,qBAAGC,MAAkBC,OAAOC,UAG5B,qBAAGF,MAAkBC,OAAOE,a,kBCoBpD,EA1Ba,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKA,KAAKP,WAC3D,CAACE,IAGFF,IACE,SAACP,EAAD,UACGO,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBACEC,IAAKD,EAhBI,kCAgB4BA,EAAeE,EACpDC,IAAKL,KAEP,uBAAIA,KACJ,uBAAIC,MANGF,U,oNCpBNO,G,QAAU,oCACVC,EAAW,+B,SCKTC,EAA2B,GAA3BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0CC,GAA1C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKWC,EAAAA,GAAAA,MAAY,cALvB,gFASO,SAASC,IACd,OAAOL,EAA2B,GAAD,OAC5BD,EAD4B,wCACYD,IAIxC,SAASQ,EAAgBC,GAC9B,OAAOP,EAA2B,GAAD,OAC5BD,EAD4B,iCACKD,EADL,iCACqCS,EADrC,yBAK5B,SAASC,EAAgBxB,GAC9B,OAAOgB,EAA2B,GAAD,OAC5BD,EAD4B,kBACVf,EADU,oBACSc,EADT,oBAK5B,SAASW,EAAgBzB,GAC9B,OAAOgB,EAA2B,GAAD,OAC5BD,EAD4B,kBACVf,EADU,4BACiBc,EADjB,oBAK5B,SAASY,EAAgB1B,GAC9B,OAAOgB,EAA2B,GAAD,OAC5BD,EAD4B,kBACVf,EADU,4BACiBc,EADjB,sB","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","constans/movies-api.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-gap: 15px;\n  grid-template-columns: repeat(auto-fill, 160px);\n  margin-bottom: 40px;\n\n  li {\n    overflow: hidden;\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px;\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: auto;\n    margin-bottom: 10px;\n  }\n\n  p {\n    text-align: center;\n    margin-bottom: 7px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from 'service/api';\nimport { CastList } from './Cast.styled';\nimport avatar from 'images/image-avatar.jpg';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.getMovieCredits(movieId).then(data => setCast(data.data.cast));\n  }, [movieId]);\n\n  return (\n    cast && (\n      <CastList>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img\n              src={profile_path ? BASE_IMAGE_URL + profile_path : avatar}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </CastList>\n    )\n  );\n};\n\nexport default Cast;\n","export const API_KEY = '477970700460ede8f70e8706023875b6';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BASE_URL, API_KEY } from 'constans/movies-api';\n\nasync function getMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return toast.error('Not found');\n  }\n}\n\nexport function getMoviesTrending() {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function getSearchMovies(query) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["CastList","styled","theme","colors","accent","secondary","useState","cast","setCast","movieId","useParams","useEffect","api","then","data","map","id","name","character","profile_path","src","avatar","alt","API_KEY","BASE_URL","getMoviesWithErrorHandling","url","axios","response","toast","getMoviesTrending","getSearchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}