{"version":3,"file":"static/js/947.c26c417e.chunk.js","mappings":"sNAoFA,UAhEqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAASQ,EAAKA,WACvD,CAACP,KAGF,iCACE,SAAC,KAAD,CAAQQ,KAAK,SAASC,QAAS,kBAAMP,GAAU,IAA/C,kBAICJ,IACC,iCACE,UAAC,KAAD,YACE,0BACE,SAAC,KAAD,CACEY,IAvBO,kCAuBeZ,EAAMa,YAC5BC,IAAKd,EAAMe,WAGf,UAAC,KAAD,YACE,SAAC,KAAD,UAAaf,EAAMe,SACnB,UAAC,KAAD,YACE,SAAC,KAAD,uBACA,SAAC,KAAD,UAAOf,EAAMgB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAGpD,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,uBAAIpB,EAAMqB,iBAGZ,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,uBAAIrB,EAAMsB,mBAGZ,SAAC,KAAD,wBACA,uBAAItB,EAAMuB,kBAId,UAAC,KAAD,YACE,qDAEA,SAAC,IAAD,CAAMC,GAAE,kBAAatB,EAAb,SAA6BuB,SAAS,EAA9C,mBAGA,SAAC,IAAD,CAAMD,GAAE,kBAAatB,EAAb,YAAgCuB,SAAS,EAAjD,yBAIF,SAAC,KAAD,Y,yTC3EGC,EAAUC,EAAAA,GAAAA,IAAH,mMAGE,qBAAGC,MAAkBC,OAAOC,UAG5B,qBAAGF,MAAkBC,OAAOE,aAIrCC,EAAaL,EAAAA,GAAAA,GAAH,sFAGZ,qBAAGC,MAAkBC,OAAOI,QAG1BC,EAAaP,EAAAA,GAAAA,IAAH,+DAKVQ,EAAMR,EAAAA,GAAAA,IAAH,4FAMHS,EAAQT,EAAAA,GAAAA,GAAH,mFAGP,qBAAGC,MAAkBC,OAAOI,QAG1BI,EAAOV,EAAAA,GAAAA,EAAH,6DAEN,qBAAGC,MAAkBC,OAAOI,QAG1BK,EAAYX,EAAAA,GAAAA,IAAH,gEAKTY,EAAgBZ,EAAAA,GAAAA,IAAH,iJAOb,qBAAGC,MAAkBC,OAAOI,QAI5BO,EAAWb,EAAAA,GAAAA,GAAH,2GAIV,qBAAGC,MAAkBC,OAAOI,QAG1BQ,EAASd,EAAAA,GAAAA,OAAH,wPAKR,qBAAGC,MAAkBC,OAAOI,QAM1B,qBAAGL,MAAkBC,OAAOa,c,oNC1E5BC,G,QAAU,oCACVC,EAAW,+B,SCKTC,EAA2B,GAA3BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0CC,GAA1C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKWC,EAAAA,GAAAA,MAAY,cALvB,gFASO,SAASC,IACd,OAAOL,EAA2B,GAAD,OAC5BD,EAD4B,wCACYD,IAIxC,SAASQ,EAAgBC,GAC9B,OAAOP,EAA2B,GAAD,OAC5BD,EAD4B,iCACKD,EADL,iCACqCS,EADrC,yBAK5B,SAASC,EAAgBnD,GAC9B,OAAO2C,EAA2B,GAAD,OAC5BD,EAD4B,kBACV1C,EADU,oBACSyC,EADT,oBAK5B,SAASW,EAAgBpD,GAC9B,OAAO2C,EAA2B,GAAD,OAC5BD,EAD4B,kBACV1C,EADU,4BACiByC,EADjB,oBAK5B,SAASY,EAAgBrD,GAC9B,OAAO2C,EAA2B,GAAD,OAC5BD,EAD4B,kBACV1C,EADU,4BACiByC,EADjB","sources":["components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieDetails.styled.js","constans/movies-api.js","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport * as api from 'service/api';\nimport {\n  Wrapper,\n  Title,\n  Text,\n  Container,\n  Overview,\n  Box,\n  ContainerLink,\n  MovieTitle,\n  MovieImage,\n  Button,\n} from './MovieDetails.styled';\n\nimport { Link } from 'Layout/AppBar/AppBar.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    api.getMovieDetails(movieId).then(data => setMovie(data.data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={() => navigate(-1)}>\n        Back\n      </Button>\n\n      {movie && (\n        <>\n          <Wrapper>\n            <div>\n              <MovieImage\n                src={BASE_IMAGE_URL + movie.poster_path}\n                alt={movie.title}\n              />\n            </div>\n            <Container>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <Box>\n                <Title>Genres:</Title>\n                <Text>{movie.genres.map(genre => genre.name).join(', ')}</Text>\n              </Box>\n\n              <Box>\n                <Title>Rate:</Title>\n                <p>{movie.popularity}</p>\n              </Box>\n\n              <Box>\n                <Title>Release date:</Title>\n                <p>{movie.release_date}</p>\n              </Box>\n\n              <Overview>Overview</Overview>\n              <p>{movie.overview}</p>\n            </Container>\n          </Wrapper>\n\n          <ContainerLink>\n            <h2>Additional information:</h2>\n\n            <Link to={`/movies/${movieId}/cast`} replace={true}>\n              Cast\n            </Link>\n            <Link to={`/movies/${movieId}/reviews`} replace={true}>\n              Reviews\n            </Link>\n          </ContainerLink>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  box-shadow: 0px 0px 5px 0px;\n`;\n\nexport const MovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 40px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const MovieImage = styled.img`\n  width: 250px;\n  object-fit: cover;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  margin-right: 10px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Text = styled.p`\n  margin-right: 8px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Container = styled.div`\n  height: auto;\n  padding: 40px 60px;\n`;\n\nexport const ContainerLink = styled.div`\n  display: flex;\n  align-items: baseline;\n  padding: 40px 0;\n\n  h2 {\n    margin-right: 20px;\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nexport const Overview = styled.h3`\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  padding: 12px 20px;\n  border-radius: 5px;\n  border: none;\n  color: ${({ theme }) => theme.colors.text};\n  transition: all 250ms ease;\n  box-shadow: 0px 0px 2px 0px;\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.accentTwo};\n  }\n`;\n","export const API_KEY = '477970700460ede8f70e8706023875b6';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BASE_URL, API_KEY } from 'constans/movies-api';\n\nasync function getMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return toast.error('Not found');\n  }\n}\n\nexport function getMoviesTrending() {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function getSearchMovies(query) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["useState","movie","setMovie","movieId","useParams","navigate","useNavigate","useEffect","api","then","data","type","onClick","src","poster_path","alt","title","genres","map","genre","name","join","popularity","release_date","overview","to","replace","Wrapper","styled","theme","colors","accent","secondary","MovieTitle","text","MovieImage","Box","Title","Text","Container","ContainerLink","Overview","Button","accentTwo","API_KEY","BASE_URL","getMoviesWithErrorHandling","url","axios","response","toast","getMoviesTrending","getSearchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}