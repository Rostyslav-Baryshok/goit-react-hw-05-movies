{"version":3,"file":"static/js/979.064151cc.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","constans/movies-api.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  box-shadow: 0px 0px 5px 0px;\n`;\n\nexport const MovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 40px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const MovieImage = styled.img`\n  width: 250px;\n  object-fit: cover;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  margin-right: 10px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Text = styled.p`\n  margin-right: 8px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Container = styled.div`\n  height: auto;\n  padding: 40px 60px;\n`;\n\nexport const ContainerLink = styled.div`\n  display: flex;\n  align-items: baseline;\n  padding: 40px 0;\n\n  h2 {\n    margin-right: 20px;\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nexport const Overview = styled.h3`\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  padding: 12px 20px;\n  border-radius: 5px;\n  border: none;\n  color: ${({ theme }) => theme.colors.text};\n  transition: all 250ms ease;\n  box-shadow: 0px 0px 2px 0px;\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.accentTwo};\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 18px;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.accentTwo};\n  }\n`;\n\nexport const LinkText = styled.p`\n  padding: 25px 20px 15px;\n  text-align: center;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-gap: 15px;\n  grid-template-columns: repeat(auto-fill, 300px);\n  margin-bottom: 40px;\n  padding-top: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  overflow: hidden;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  box-shadow: 0px 2px 5px 0px;\n\n  transition: transform 250ms ease;\n\n  &:hover {\n    transform: scale(1.015);\n    box-shadow: 0px 2px 1px 0px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MovieList, MovieItem, MovieLink, LinkText } from './MovieList.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieLinkList = ({ data }) => {\n  return (\n    data && (\n      <MovieList>\n        {data.map(({ id, title, poster_path }) => {\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                <img src={BASE_IMAGE_URL + poster_path} alt={title} />\n                <LinkText> {title}</LinkText>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    )\n  );\n};\n\nMovieLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number, title: PropTypes.string })\n  ),\n};\n\nexport default MovieLinkList;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  display: table;\n  margin: 0 auto;\n`;\n\nexport const FieldStyle = styled(Field)`\n  width: 250px;\n  padding: 12px 10px;\n  border: 1px solid lightgray;\n  border-radius: 5px;\n  margin-right: 10px;\n  transition: all 250ms ease;\n\n  &:hover,\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.colors.accentTwo};\n  }\n`;\n","import { useState } from 'react';\nimport { Button } from 'components/MovieDetails/MovieDetails.styled';\n\nimport { FormStyle, FieldStyle } from './SearchForm.styled';\nimport { Formik } from 'formik';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialValues = {\n  name: '',\n};\n\nexport const SearchForm = () => {\n  const [query, setQuery] = useState('');\n\n  const handleStateChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = resetForm => {\n    if (query.trim() === '') {\n      return toast.warn('Please insert valid request!');\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues}>\n      <FormStyle onSubmit={handleSubmit}>\n        <FieldStyle\n          name=\"name\"\n          type=\"text\"\n          value={query}\n          placeholder=\"Search movies\"\n          onChange={handleStateChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport * as api from 'service/api';\n\nconst MoviesPage = () => {\n  const [data, setData] = useState(null);\n  const { search } = useLocation();\n\n  useEffect(() => {\n    const query = search.slice(8);\n    if (!query) {\n      return;\n    }\n\n    api.getSearchMovies(query).then(data => {\n      setData(data.data.results);\n    });\n  }, [search]);\n\n  return (\n    <>\n      <SearchForm />\n      {data && <MovieList data={data} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","export const API_KEY = '477970700460ede8f70e8706023875b6';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BASE_URL, API_KEY } from 'constans/movies-api';\n\nasync function getMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return toast.error('Not found');\n  }\n}\n\nexport function getMoviesTrending() {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function getSearchMovies(query) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieCredits(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMoviesWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["Wrapper","styled","theme","colors","accent","secondary","MovieTitle","text","MovieImage","Box","Title","Text","Container","ContainerLink","Overview","Button","accentTwo","MovieLink","Link","LinkText","MovieList","MovieItem","data","map","id","title","poster_path","to","src","alt","FormStyle","Form","FieldStyle","Field","initialValues","name","SearchForm","useState","query","setQuery","onSubmit","resetForm","trim","toast","type","value","placeholder","onChange","e","currentTarget","toLowerCase","setData","search","useLocation","useEffect","slice","api","then","results","API_KEY","BASE_URL","getMoviesWithErrorHandling","url","axios","response","getMoviesTrending","getSearchMovies","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}